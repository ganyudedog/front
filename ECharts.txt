数据可视化(市场趋势!!!)
数据可视化的主要目的: 借助图形化的手段,清晰有效地传达和沟通信息。
即将数据转换为图形来呈现,更加地清晰有效。

数据可视化需要引入其他的数据库,常见的有:
1. D3.js 目前web端评价最高的javascript可视化工具库(入手难)
2. ECharts.js 百度出品的一个开源javascript数据可视化库,开源使用
3. Highcharts.js 国外的前端数据可视化库,免费
4. AntV 全新一代数据可视化解决方案


ECharts
Echarts就是一个js库。
ECharts网站: https://echarts.apache.org/zh/index.html

ECharts的使用:
1. 下载并引入。
2. 准备一个具备大小的DOM容器。
3. 初始化Echarts实例对象。
var 实例变量 = echarts.init(获取的DOM盒子元素)

4. 指定配置项和数据。
var 变量 = {
    里面为数个对象,详细见手册。=
}

5. 将配置项设置给echarts实例对象
实例变量.setOpiton(配置项变量);


ECharts相关配件(主要使用)
title: 标题组件(图表的标题)

tooltip: 提示框组件(鼠标经过时的提示框)
其中的trigger表示触发提示框的类型,为字符串型,'item'(图像),'axis'(坐标轴),'none'(不触发)。

其中的formatter表示提示内容的格式化。
下面是一些格式化的代表:
折线(区域)图、柱状(条形)图、K线图:{a}(系列名称),{b}(类目值),{c}(数值), {d}(无)

散点图(气泡)图 : {a}(系列名称),{b}(数据名称),{c}(数值数组), {d}(无)

地图 : {a}(系列名称),{b}(区域名称),{c}(合并数值), {d}(无)

饼图、仪表盘、漏斗图: {a}(系列名称),{b}(数据项名称),{c}(数值), {d}(百分比)


legend: 图例组件(表格提示哪些线段对应哪些元素)
toolbox: 工具栏(可以让图表变成图片从而保存)

grid: 直角坐标系内绘图网格(绘图区域,非盒子区域)
其中有一个属性为containLabel,为bool型,表示是否显示出刻度标签。
其中的left,right等属性可以表示其与容器之间的距离。
其中的show属性为bool型,可以让坐标系中的网格显示出来(默认为false,borderColor可以设置边框的颜色)。


xAxis: 直角坐标系grid中的x轴
yAxis: 直角坐标系grid中的y轴
x轴其中的boundaryGap为bool型,表示点两边的留白,不与下面对齐。
轴上的线叫做刻度,轴上修饰线的文字叫做刻度标签(重要!!!)
轴上延长的线叫做分割线。


series: 系列列表。每个系列通过type决定自己的图表类型
里面的属性为数组,数组里面的元素为对象,数组中对象的数量决定了元素的数量。
对象的type决定了图表的类型。
对象的data表示相应元素的数据,data为数组,数组元素可以为对象(也就是可以修改单个元素的呈现方式)。
对象的stack表示数据堆叠,它之前的数据值加上它本身,里面的值为字符串。
注意: stack中的值不同的对象一般不相同,否则会出现叠加。

color: 调色盘颜色列表(设置元素代表的颜色),里面的属性为数组。

其他配置以及上述配件的详细属性在echarts的文档里面查阅。


注意: 在ECharts的使用中,会有大量的变量命名,为了防止变量名冲突,我们需要采用立即执行函数策略。


注意: 正常情况下,图表不会随着页面的缩小而缩小,所以要在js中绑定一个resize事件,然后myChart.resize()即可。


tab栏更换图表可以更改其配置项(data数据)来实现图表的更改,而非重新绘制(这样运行快一些)。


一定要学会查阅文档!!!