js库: 即library,是一个封装好的特定的集合(方法和函数)。也就是封装了一些定义好的函数在里面。
简单理解就是一个js文件,里面对原生js代码进行了封装,可以提高开发效率。

学习js库的本质就是学习调用js库中的函数。


注意: 不同于原生js,jQuery里面的引号一般为""；

若采用了jQuery的js代码单独写在一个文件中,我们只需要先将jQuery代码引入到html页面中,再引入该文件即可。


jQuery(查询js) 能够快速方便的操作DOM的一个js库,里面基本都是函数(方法)
jQuery封装了js常用的功能代码,优化了DOM操作,事件处理,动画设计和Ajax交互。

jQuery下载地址: https://jquery.com/ (找到需要的文件后,复制粘贴即可)

jQuery的使用: 引入相应的文件,直接写代码即可。

jQuery的顶级对象 $
$ 是jQuery的别称,同时也是jQuery的顶级符号(相当于原生js的window对象),可以用jQuery代替(一般不用)。

DOM对象是通过原生js来获取的,而jQuery对象则是通过jQuery的方法来获取的。
jQuery对象的本质是利用 $对DOM对象包装后产生的对象(以伪数组形式存储!!!)。

jQuery获取对象的方式 $(""),即可直接获取对象(和DOM对象不一样)。

注意: jQuery对象只能使用jQuery的属性和方法(不能使用style),而DOM对象则使用原生js的属性和方法!!!

jQuery对象和DOM对象可以相互转化
DOM对象转换为jQuery对象     语法规范: $(DOM对象) 
jQuery对象转化为DOM对象     语法规范: $(对象名)[index] / $(对象名).get(index)  index表示对象在伪数组里面的索引号

注意: jQuery没有play这个方法。


jQuery入口函数: $(function() {
    代码;
}) 



jQuery常用的API

jQuery选择器
$("选择器") 选择器为css选择器(css则怎么写,这里面就怎么写),使用方法同querySelector("")。
同样,选择器中还可以包含结构伪类选择器,如:
$("li:first") 获取第一个li元素
$("li:last") 获取最后一个li元素
$("li:eq(n)") 获取第n+1个li元素
$("li:odd") 获取索引号(和数组一样)为奇数的li元素
$("li:even") 获取索引号(和数组一样)为偶数的li元素

在表单中,jQuery还提供了其他的选择器,如 :checked(查找被选中的表单元素)。


jQuery筛选方法(返回的都是伪数组!!!)
parent() 查找父级
parents("选择器") 查找指定的祖先级元素(必须为父子关系)
children("选择器") 选出最近一级的子元素(亲儿子)
find("选择器") 后代选择器
siblings("选择器") 查找兄弟元素节点,不包括自己
nextAll() 查找当前元素之后的所有同辈元素,不包括自己
prevtAll() 查找当前元素之前的所有同辈元素,不包括自己

以下两个返回的不是伪数组
hasClass("类名") 检查当前的元素是否还有某个元素,如果有,则返回true
eq(index) 相当于$("li:eq(n)") (更推荐使用这种方法)


jQuery设置样式
语法规范: j对象.css("属性","值")
注意: 这样会直接将里面所有的元素都设置css。
这里使用到了隐式迭代,即会给匹配到的所有元素进行循环遍历,不需要我们手动循环,从而简化操作。


jQuery操作css
1. j对象.css("属性") 返回属性值(带有单位的字符串)

2. 以对象形式修改可以设置多组样式,其中属性名和属性值之间用 : 隔开,且属性可以不加引号。
语法规范: j对象.css({
    属性1: 值1,
    属性2: 值2,
    ...
})
注意: 这里的属性名必须按原生js的方法来(驼峰命名法),且若值不为数字型需要加引号!!!
left,top,width等不需要加引号,直接写数字!!!


3. 类操作方法(不会影响其他的类)
(1)添加类
语法规范: j对象.addClass("类名")

(2)移除类
语法规范: j对象.removeClass("类名")

(3)切换类 有则删除,无则添加
语法规范: j对象。toggleClass("类名")


jQuery绑定事件
语法规范: j对象(会有隐式迭代).事件名(function(){})
jQuery里面的this指针也要变为 $(this)。
注意: 事件名同事件监听方式,不加 on !!!

jQuery特有事件 hover([over], out) 事件切换
over: 鼠标经过元素就触发的函数(相当于mouseenter)
out: 鼠标离开时触发的函数(相当于mouseleave) 
注意: 如果只写一个参数,那么鼠标经过和离开都会触发该函数!!!


jQuery链式编程
如 $(this).css("color,"red").siblings().css("color","");
就相当于 $(this).css("color,"red");$(this)siblings().css("color","");
这样可以大大简化代码。
注意: 使用该方法时一定要明确操作的对象是什么,即之前指定的对象!!!


jQuery常用方法
1. index() 返回当前元素的索引号。  

jQuery中只需要使用siblings就可以直接实现排他思想。


jQuery效果
1. 显示隐藏 
(1) show([ 速度,[运动曲线],[回调函数] ]) 元素显示
速度: slow,normal,fast(前面都是字符串形式) 或者 表示动画时长的毫秒数值 
运动曲线: 默认为"swing" (慢 - 快 - 慢) ,可用参数"linear"(匀速)
回调函数: 在动画完成时执行的函数,每个元素执行一次。

(2) hide([ 速度,[运动曲线],[回调函数] ]) 元素隐藏
参数定义同上

(3)toggle([ 速度,[运动曲线],[回调函数] ]) 显示则隐藏,隐藏则显示
参数定义同上

一般以上函数里面不加参数,直接显示或隐藏(因为丑)。


2. 滑动
(1)slideDown([ 速度,[运动曲线],[回调函数] ]) 下拉滑动
参数定义同上

(2)slideUp(参数同上) 上拉 
参数定义同上

(3)slideToggle(参数同上) 滑动切换,若不显示,则默认为上拉。
参数定义同上

一般里面也不跟参数。

3. 淡入淡出
(1)fadeIn([ 速度,[运动曲线],[回调函数] ]) 淡入
参数定义同上

(2)fadeOut(参数同上) 淡出
参数定义同上

(3)fadeToggle(参数同上)  淡入淡出切换
参数定义同上

(4)fadeTo([[速度],透明度,[运动曲线],[回调函数] ]) 修改透明度,直接将元素的透明度修改为设定
透明度相当于opacity (取值 0-1 直接)。
其他参数定义同上

注意: 这里的透明度和速度必须写!!!


4. 自定义动画
animate(params, [speed], [easing], [fn])
params: 想要更改的样式属性,以对象的形式传递,必须写。
属性名不带引号,类似于jQuery中修改多种css样式的写法,复合属性采取驼峰命名法。
其余参数同show()


注意: 动画或者效果一旦触发就会执行,如果多次触发就会造成多个动画或者效果排队执行。
解决方法: 停止排队 stop()
stop()用于停止动画或者效果,写到动画或者效果的前面(重要!!!),相当于停止结束上一次的动画。
语法规范: j对象.stop().动画效果;
谁做动画给谁加!!!



jQuery属性操作

固有属性,即元素自身所带有的属性,如<a>中的href,<input>里面的type

prop() 设置或获取元素的固有属性值
获取属性值      语法规范: j对象.prop("属性名")
设置属性值      语法规范: j对象.prop("属性名","属性值")


attr() 设置或获取元素的自定义属性值
获取属性值      语法规范: j对象.attr("属性名")
设置属性值      语法规范: j对象.attr("属性名","属性值")

上述返回的都是string型。


data() 数据缓存
获取属性值      语法规范: j对象.data("属性名")
设置属性值      语法规范: j对象.data("属性名","属性值")
该方法可以在指定的元素上存储数据,并不会修改DOM元素结构。一旦页面刷新,之前存放的数据都会被删除。
注意: 这个里面的数据存放在元素的内存里面,即把元素当成了一个变量。
这个方法也可以读取h5中的自定义属性 data-... ,得到的类型为数字型(这里的属性名不需要写 data- !!!)。


jQuery内容文本值
主要针对于元素的内容和表单的value。

1. html()    普通元素内容(相当于innerHTML)
获取元素内容    语法规范: html()
设置元素内容    语法规范: html("内容")

2. text()    普通文本内容(相当于innerText)
使用方式同上

3. val()     表单的值(相当于value)
使用方式同上



jQuery元素操作
主要是遍历,创建,添加,删除元素操作。


each() 遍历元素
语法规范1: j对象.each(function(index, domEle) {} )
里面的函数为回调函数,共有两个参数:
index为每个元素的索引号(相当于for循环的i),domEle是每个DOM元素对象(重要!!!),不是j对象!!!

语法规范2: $.each(对象名, function(index, ele) {})





















